plugins {
	id 'org.springframework.boot' version '2.5.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.dio'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	//Configurações do spring MVC(Traz funcionalidades para;atender as requisições HTTP;
	//Delegar responsabilidades de processamento de dados para outros componentes e preparar a resposta que precisa ser dada;
	implementation 'org.springframework.boot:spring-boot-starter-web'

	//Dependencia para persistecia JPA que utiliza o hibernate para servir de ORM;
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//Auto-configuração, Reload;
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	//Responsavel por fazer parse do jason para o objeto Java automaticamente
	implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.12.4'

	//Conector do SGBD MySQL
	runtimeOnly 'mysql:mysql-connector-java'

	//Ajuda na abstração do código, exemplo escrita de gets e sets
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	//Conector do H2
	implementation 'com.h2database:h2'

	//Dependencia para testes e documentação
	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
	implementation group: 'io.springfox', name: 'springfox-bean-validators', version: '2.9.2'

	//Auditoria da API, abstrair regras de negocio
	implementation group: 'org.hibernate', name: 'hibernate-envers', version: '5.5.4.Final'
	implementation group: 'org.hibernate.validator', name: 'hibernate-validator', version: '7.0.1.Final'


	implementation 'javax.validation:validation-api:2.0.1.Final'


	//Start dos testes; com JUnit
	testImplementation( 'org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junite-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}